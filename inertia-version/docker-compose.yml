version: '3.8'
name: 'backbone'

services:
  db:
    image: postgres:16-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - published: ${POSTGRES_PORT-5432}
        target: 5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    env_file:
      - .env

  app:
    build:
      context: .
      dockerfile: app.dockerfile
    tty: true
    volumes:
      - ./fastapi:/srv/fastapi
      - ./vue:/srv/vue
      - node_modules:/srv/vue/node_modules
      - /dev/null:/srv/vue/package-lock.json
      - venv:/srv/fastapi/.venv
      - ../.git:/srv/.git
    ports:
      - published: ${FASTAPI_PORT:-8000}
        target: 8000
      - published: ${VUE_PORT:-5173}
        target: 5173
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
      mailhog:
        condition: service_started
      meilisearch:
        condition: service_started
      openfga:
        condition: service_started
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      FGA_API_HOST: openfga
      MINIO_HOST: minio
      SMTP_HOST: mailhog
      MEILI_HOST: meilisearch
    env_file:
      - .env

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: $MINIO_USER
      MINIO_ROOT_PASSWORD: $MINIO_PASSWORD
    entrypoint: sh
    command: -c 'mkdir -p /data/${MINIO_BUCKET:-"dine-in-ar"} && /usr/bin/minio server /data'
    restart: always

  mailhog:
    image: mailhog/mailhog
    ports:
      - published: 8025
        target: 8025 # Web interface
      - published: $SMTP_PORT
        target: 1025 # SMTP server

  meilisearch:
    image: getmeili/meilisearch:v1.6
    ports:
      - published: $MEILI_PORT
        target: 7700
    environment:
      MEILI_ENV: "development"
      MEILI_MASTER_KEY: $MEILI_MASTER_KEY
    volumes:
      - meilisearch_data:/meili_data

  openfga_db:
    image: postgres:16-alpine
    restart: always
    volumes:
      - openfga_postgres_data:/var/lib/postgresql/data
    ports:
      - published: 5434
        target: 5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    environment:
      POSTGRES_DB: ${FGA_DB_NAME}
      POSTGRES_USER: ${FGA_POSTGRES_USER}
      POSTGRES_PASSWORD: ${FGA_POSTGRES_PASSWORD}

  migrate:
    depends_on:
      openfga_db:
        condition: service_healthy
    image: openfga/openfga:latest
    command: migrate
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://${FGA_POSTGRES_USER}:${FGA_POSTGRES_PASSWORD}@openfga_db:5432/${FGA_DB_NAME}?sslmode=disable

  openfga:
    depends_on:
      migrate:
        condition: service_completed_successfully
    image: openfga/openfga:latest
    environment:
      OPENFGA_DATASTORE_ENGINE: postgres
      OPENFGA_DATASTORE_URI: postgres://${FGA_POSTGRES_USER}:${FGA_POSTGRES_PASSWORD}@openfga_db:5432/${FGA_DB_NAME}?sslmode=disable
      OPENFGA_LOG_FORMAT: json
    command: run
    ports:
      # Needed for the http server
      - published: ${FGA_API_PORT:-8080}
        target: 8080
      - published: ${FGA_PLAYGROUND_PORT:-3000}
        target: 3000

volumes:
  postgres_data:
  openfga_postgres_data:
  minio_data:
  maildata:
  mailstate:
  maillogs:
  meilisearch_data:
  node_modules:
  venv:
