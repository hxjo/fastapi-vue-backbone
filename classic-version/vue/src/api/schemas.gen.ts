// This file is auto-generated by @hey-api/openapi-ts

export const $Body_api_login_api_login_post = {
  properties: {
    grant_type: {
      anyOf: [
        {
          type: 'string',
          pattern: 'password'
        },
        {
          type: 'null'
        }
      ],
      title: 'Grant Type'
    },
    username: {
      type: 'string',
      title: 'Username'
    },
    password: {
      type: 'string',
      title: 'Password'
    },
    scope: {
      type: 'string',
      title: 'Scope',
      default: ''
    },
    client_id: {
      anyOf: [
        {
          type: 'string'
        },
        {
          type: 'null'
        }
      ],
      title: 'Client Id'
    },
    client_secret: {
      anyOf: [
        {
          type: 'string'
        },
        {
          type: 'null'
        }
      ],
      title: 'Client Secret'
    }
  },
  type: 'object',
  required: ['username', 'password'],
  title: 'Body_api_login_api_login_post'
} as const

export const $Body_set_user_avatar_api_v1_users__user_id__avatar_post = {
  properties: {
    avatar: {
      type: 'string',
      format: 'binary',
      title: 'Avatar'
    }
  },
  type: 'object',
  required: ['avatar'],
  title: 'Body_set_user_avatar_api_v1_users__user_id__avatar_post'
} as const

export const $HTTPValidationError = {
  properties: {
    detail: {
      items: {
        $ref: '#/components/schemas/ValidationError'
      },
      type: 'array',
      title: 'Detail'
    }
  },
  type: 'object',
  title: 'HTTPValidationError'
} as const

export const $NewPassword = {
  properties: {
    token: {
      type: 'string',
      title: 'Token'
    },
    password: {
      type: 'string',
      title: 'Password'
    }
  },
  type: 'object',
  required: ['token', 'password'],
  title: 'NewPassword'
} as const

export const $Token = {
  properties: {
    access_token: {
      type: 'string',
      title: 'Access Token'
    },
    token_type: {
      type: 'string',
      title: 'Token Type',
      default: 'bearer'
    }
  },
  type: 'object',
  required: ['access_token'],
  title: 'Token'
} as const

export const $UserAndToken = {
  properties: {
    user: {
      $ref: '#/components/schemas/UserOut'
    },
    token: {
      $ref: '#/components/schemas/Token'
    }
  },
  type: 'object',
  required: ['user', 'token'],
  title: 'UserAndToken'
} as const

export const $UserCreate = {
  properties: {
    email: {
      type: 'string',
      format: 'email',
      title: 'Email'
    },
    username: {
      type: 'string',
      title: 'Username'
    },
    first_name: {
      anyOf: [
        {
          type: 'string'
        },
        {
          type: 'null'
        }
      ],
      title: 'First Name'
    },
    last_name: {
      anyOf: [
        {
          type: 'string'
        },
        {
          type: 'null'
        }
      ],
      title: 'Last Name'
    },
    password: {
      type: 'string',
      title: 'Password'
    }
  },
  type: 'object',
  required: ['email', 'username', 'password'],
  title: 'UserCreate'
} as const

export const $UserOut = {
  properties: {
    email: {
      type: 'string',
      format: 'email',
      title: 'Email'
    },
    username: {
      type: 'string',
      title: 'Username'
    },
    first_name: {
      anyOf: [
        {
          type: 'string'
        },
        {
          type: 'null'
        }
      ],
      title: 'First Name'
    },
    last_name: {
      anyOf: [
        {
          type: 'string'
        },
        {
          type: 'null'
        }
      ],
      title: 'Last Name'
    },
    id: {
      type: 'integer',
      title: 'Id'
    },
    is_active: {
      type: 'boolean',
      title: 'Is Active'
    },
    avatar_url: {
      anyOf: [
        {
          type: 'string'
        },
        {
          type: 'null'
        }
      ],
      title: 'Avatar Url'
    }
  },
  type: 'object',
  required: ['email', 'username', 'id', 'is_active'],
  title: 'UserOut'
} as const

export const $UserUpdate = {
  properties: {
    email: {
      anyOf: [
        {
          type: 'string',
          format: 'email'
        },
        {
          type: 'null'
        }
      ],
      title: 'Email'
    },
    password: {
      anyOf: [
        {
          type: 'string'
        },
        {
          type: 'null'
        }
      ],
      title: 'Password'
    },
    username: {
      anyOf: [
        {
          type: 'string'
        },
        {
          type: 'null'
        }
      ],
      title: 'Username'
    },
    first_name: {
      anyOf: [
        {
          type: 'string'
        },
        {
          type: 'null'
        }
      ],
      title: 'First Name'
    },
    last_name: {
      anyOf: [
        {
          type: 'string'
        },
        {
          type: 'null'
        }
      ],
      title: 'Last Name'
    }
  },
  type: 'object',
  title: 'UserUpdate'
} as const

export const $ValidationError = {
  properties: {
    loc: {
      items: {
        anyOf: [
          {
            type: 'string'
          },
          {
            type: 'integer'
          }
        ]
      },
      type: 'array',
      title: 'Location'
    },
    msg: {
      type: 'string',
      title: 'Message'
    },
    type: {
      type: 'string',
      title: 'Error Type'
    }
  },
  type: 'object',
  required: ['loc', 'msg', 'type'],
  title: 'ValidationError'
} as const
